const Notification = require('../models/Notification');

exports.obtenerTodas = async(req, res) => {
  try {
    console.log('üîç Obteniendo notificaciones...');
    
    // Obtener notificaciones y filtrar solo aquellas cuyas alertas NO est√©n atendidas
    const notificaciones = await Notification.find()
      .populate({
        path: 'alerta',
        select: 'direccion detalle status fechaHora usuarioCreador',
        match: { 
          status: { $nin: ['atendida', 'cancelada'] } // Excluir alertas atendidas y canceladas
        }
      })
      .sort({ createdAt: -1 })
      .limit(20); // Aumentamos el l√≠mite porque algunos se filtrar√°n
    
    // Filtrar notificaciones que tienen alerta v√°lida (no atendida)
    const notificacionesFiltradas = notificaciones.filter(notif => notif.alerta !== null);
    
    console.log(`üìã Notificaciones encontradas: ${notificaciones.length}`);
    console.log(`üìã Notificaciones filtradas (alertas activas): ${notificacionesFiltradas.length}`);
    console.log('üìÑ Datos de notificaciones filtradas:', notificacionesFiltradas);
    
    res.status(200).json({ notificaciones: notificacionesFiltradas });
  } catch (error) {
    console.error('‚ùå Error al obtener notificaciones:', error);
    res.status(500).json({
      mensaje: 'Error al obtener notificaciones',
      error: error.message
    });
  }
};

exports.marcarComoLeida = async(req, res) => {
  try {
    const notificacionId = req.params.id;
    const { userId } = req.body;

    if (!userId) {
      return res
        .status(400)
        .json({ mensaje: 'userId es requerido en el cuerpo' });
    }

    const notificacion = await Notification.findById(notificacionId); // ‚úÖ debe ir antes

    if (!notificacion) {
      return res.status(404).json({ mensaje: 'Notificaci√≥n no encontrada' });
    }

    if (!notificacion.leidaPor.includes(userId)) {
      notificacion.leidaPor.push(userId);
      await notificacion.save();
      console.log(
        `‚úÖ Usuario ${userId} marc√≥ como le√≠da la notificaci√≥n ${notificacionId}`
      );
    } else {
      console.log(
        `‚ÑπÔ∏è Usuario ${userId} ya hab√≠a le√≠do la notificaci√≥n ${notificacionId}`
      );
    }

    res.status(200).json({ mensaje: 'Notificaci√≥n marcada como le√≠da' });
  } catch (error) {
    console.error('‚ùå Error al marcar como le√≠da:', error.message);
    res.status(500).json({ mensaje: 'Error interno', error: error.message });
  }
};
